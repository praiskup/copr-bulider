#! /bin/bash

# Generate SRPM against Copr's dist-git instance.
# Copyright (C) 2017 Red Hat, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

set -e

error() { echo >&2 " ! $*"; }
die()   { error "$@"; exit 1; }

ARGS=$(getopt -o "" -l "module:,revision:,config:,branch:,resultdir:" -n "getopt" -- "$@")
eval set -- "$ARGS"

opt_module=
opt_revision=
opt_config=
opt_resultdir=:tmp:

while :; do
    case "$1" in
    --module|--revision|--config|--branch|--resultdir)
        opt=${1##--}
        opt=${opt##-}
        opt=${opt//-/_}
        eval "opt_$opt=$2"
        shift 2
        ;;
    --) # end!
        shift
        break
        ;;
    *)
        echo "programmer mistake ($1)" >&2
        exit 1
        ;;
    esac
done

opt_parse_error ()
{
    error "$*"
    opt_parse_success=false
}

opt_parse_success=:
for opt in module revision config; do
    eval "test -z \"\$opt_$opt\"" \
        && opt_parse_error "missing argument --$opt"
done

test -f "$opt_config" || opt_parse_error "Missing config file '$opt_config'"
opt_config=$(readlink -f "$opt_config")

if test "$opt_resultdir" = :tmp:
then
    opt_resultdir=$(mktemp -d)
else
    test -d "$opt_resultdir" || opt_parse_error "'$opt_resultdir' is not dir"
fi

$opt_parse_success

# TODO: convert branch->dist? (best effort)
dist=%nil

eval "$(crudini --format=sh --get "$opt_config" copr_builder)"

success=:
for opt in branching
do
    eval "test -z \"\$$opt\"" \
        && error "missing config option $opt" \
        && success=false
done
$success

# Construct 'rpkg' options, use them as '$@' later.
set -- --verbose --debug --config "$opt_config"

# TODO: drop this hack after https://pagure.io/rpkg/pull-request/212
set -- "$@" --release rhel-7.2

olddir=$PWD
cd "$opt_resultdir"
rpkg "$@" clone -a "$opt_module" .
git checkout "$opt_revision"
rpkg "$@" --module-name "$opt_module" sources
cd "$opt_resultdir"

echo "results are in '$opt_resultdir'"
